1. CREATE PROJECT
a. Create a folder to the project.
b. Create folders inside the project: Client, Server, Shared.
c. Create a project in each folder using: dotnet new console --use-program-main
d. Shared: Change name from program.cs to Connection.cs, and create a new file called Message.cs.

2. CREATE SERVER
a. Used Williams poll example.

3. CREATE CLIENT THAT CONNECTS TO THE SERVER
a. Based of Williams poll server.


4. CLIENT: CREATED NEW FILE: LOGIC-Storing all methods we call on in Main.
a. Create Main Menu 
b. Create functionality to create an account on the CLient side.

5. SERVER:
a. Recieve the new user information.(Tog bort dubletter, servern blev forvirrad nar den fick en "Hej Server" ist for CREATE_ACCOUNT med 2 delar anv och losen)
b. Server sends a confirmation response to the client that the user is created Display on Client Console. ()string response = "Kontot Ã¤r nu registrerat!";
c. Server Console prints out a message: Console.WriteLine($"Creating account for user: {username} with password: {password}");

6. MONGODB
a. Download in terminal: dotnet add package MongoDB.Driver
b. Added Using keyword for MongoDB
c. Created a container in Docker Desktop called ChatApp - assigned a port(Was'nt bound port automatically causing the code not contiued because no connection wihrt DB ). 
d. Initiated a collection called users & Bson Docker: static IMongoCollection<BsonDocument> usersCollection;
e.  // Set up MongoDB connection
        MongoClient mongoClient = new MongoClient("mongodb://localhost:27017");
        IMongoDatabase database = mongoClient.GetDatabase("ChatApp");
        usersCollection = database.GetCollection<BsonDocument>("users");

f. Created a function InsertUser to save user and user info to the Database. 
g. Called the function InsertUser in the CREATE_ACCOUNT switch.
-- If things doenst work on wednesday, check that the port is still there etc 

NEXT TIME: LOGIN FUNCTION

